---
# do not remove this image: used in external audits (DKP CSE)
image: {{ .ModuleNamePrefix }}{{ .ImageName }}-src-artifact
fromImage: builder/src
final: false

secrets:
- id: SOURCE_REPO
  value: {{ .SOURCE_REPO }}

shell:
  install:
    - git clone --depth 1 --branch {{ $.Versions.SNAPSHOT_CONTROLLER }} $(cat /run/secrets/SOURCE_REPO)/kubernetes-csi/external-snapshotter.git /src/snapshot-controller
    - cd /src/snapshot-controller
#    - for patchfile in /patches/images/{{ $.ImageName }}/patches/*.patch; do echo "Apply ${patchfile} ... "; git apply ${patchfile} --verbose; done
#    - rm -rf /src/images/{{ $.ImageName }}/patches
    - rm -rf /src/snapshot-controller/vendor
    - rm -rf /src/snapshot-controller/.git

---
image: {{ .ModuleNamePrefix }}{{ .ImageName }}-golang-artifact
fromImage: {{ eq .SVACE_ENABLED "false" | ternary "builder/golang-alpine" "builder/alt-go-svace" }}
final: false

import:
  - image: {{ .ModuleNamePrefix }}{{ .ImageName }}-src-artifact
    add: /src
    to: /src
    before: install

mount:
{{ include "mount points for golang builds" . }}

secrets:
- id: GOPROXY
  value: {{ .GOPROXY }}

shell:
{{- if eq .SVACE_ENABLED "false" }}
  beforeInstall:
  {{- include "alpine packages proxy" $ | nindent 2 }}
  - apk add --no-cache make bash git
{{- end }}
  install:
    - cd /src/snapshot-controller
    - export CGO_ENABLED=0 GOOS=linux GOARCH=amd64
    - GOPROXY=$(cat /run/secrets/GOPROXY) go mod download
    - |
      {{- include "image-build.build" (set $ "BuildCommand" (printf "make build")) | nindent 6 }}
    - cp bin/snapshot-controller bin/csi-snapshotter bin/snapshot-validation-webhook /
    - chown 64535:64535 /snapshot-controller /csi-snapshotter /snapshot-validation-webhook
    - chmod 0755 /snapshot-controller /csi-snapshotter /snapshot-validation-webhook

---
image: {{ .ModuleNamePrefix }}{{ .ImageName }}
fromImage: base/distroless
git:
{{- include "image mount points" . }}
import:
  - image: {{ .ModuleNamePrefix }}{{ .ImageName }}-golang-artifact
    add: /{{ $.ImageName }}
    to: /{{ $.ImageName }}
    before: setup

imageSpec:
  config:
    entrypoint: ["/{{ $.ImageName }}"]
